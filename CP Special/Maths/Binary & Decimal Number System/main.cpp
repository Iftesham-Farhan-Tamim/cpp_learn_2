// // Division Method for Decimal to Binary Conversion

// #include <bits/stdc++.h>
// using namespace std;

// int main() {
//     int n;
//     cin >> n;
//     string ans = "";

//     if(n == 0) {
//         ans = "0";
//     } else {
//         while(n > 0) {
//             if(n % 2 == 0) {
//                 ans = "0" + ans;
//             } else {
//                 ans = "1" + ans;
//             }
//             n /= 2;
//         }
//     }
//     cout << ans << endl;
// }

// input:
// 5

// output:
// 101
// ............................................................................................
// // Bitwise Binary Conversion (Storing Binary as an Integer)

// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     int n;
//     cin >> n;

//     int ans = 0;
//     int i = 0;
//     while(n != 0) {
//         int bit = n & 1;  (bitwise AND operation)
//         ans = (bit * pow(10, i)) + ans;
//         n = n >> 1;
//         i++;
//     }
//     cout << "Answer is: " << ans << endl;
// }

// // & only gives 1 when both bits are 1. So:
// // 1 & 1 = 1
// // 0 & 1 = 0
// // 1 & 0 = 0
// // 0 & 0 = 0
// // So, 5 & 1 = 1

// // 101 >> 1 = 10   â†’ the rightmost bit is removed
// // 10 in binary = 2 in decimal
// // So, 5 >> 1 = 2

// input:
// 5

// output:
// 101
// ............................................................................................
// // convert to binary number (given as a decimal)

// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     int n;
//     cin >> n;

//     int i = 0, ans = 0;

//     while(n != 0) {
//         if(n % 10 == 1) {
//             ans = ans + pow(2, i);
//         }
//         n = n / 10;
//         i++;
//     }
//     cout << ans << endl;
// }

// input:
// 10101

// output:
// 21
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................



