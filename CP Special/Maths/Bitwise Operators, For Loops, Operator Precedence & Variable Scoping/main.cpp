// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     int a = 4;
//     int b = 6;

//     cout << "a & b = " << (a & b) << endl;
//     cout << "a | b = " << (a | b) << endl;
//     cout << "   ~a = " << ~a << endl;
//     cout << "a ^ b = " << (a ^ b) << endl;
// }

// output:
// a & b = 4
// a | b = 6
//    ~a = -5
// a ^ b = 2
// ............................................................................................
// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     cout << (17>>1) << endl;  // 8
//     cout << (17>>2) << endl;  // 8
//     cout << (19<<1) << endl;  // 9
//     cout << (21<<2) << endl;  // 7
// }
// ............................................................................................
// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     int i = 7;

//     cout << (++i) << endl;  // 8
//     cout << (i++) << endl;  // 8
//     cout << (i--) << endl;  // 9
//     cout << (--i) << endl;  // 7
// }
// ............................................................................................
// #include <bits/stdc++.h>
// using namespace std;

// int main() {
//     int a, b = 1;
//     a = 10;

//     if(++a) {
//         cout << b << endl;
//     } else {
//         cout << ++b << endl;
//     }
// }

// output:
// 1
// ............................................................................................
// #include <bits/stdc++.h>
// using namespace std;

// int main() {
//     int a = 1;
//     int b = 2;

//     if(a-- > 0 && ++b > 2) {
//         cout << "Stage1 - Inside If ";
//     } else {
//         cout << "Stage2 - Inside else ";
//     }
//     cout << a << " " << b << endl;
// }

// output:
// Stage1 - Inside If 0 3
// ............................................................................................
#include <bits/stdc++.h>
using namespace std;

int main() {
    int a = 3;
    cout << a << endl;

    if(true) {
        int a = 5;
        cout << a << endl;
    }

    cout << a << endl;
}

// output:
// 3
// 5
// 3
// ............................................................................................

// ............................................................................................

// ............................................................................................

// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................
// ............................................................................................



